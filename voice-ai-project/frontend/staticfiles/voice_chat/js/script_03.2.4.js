let socket = null;  // ‡πÄ‡∏Å‡πá‡∏ö WebSocket ‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏ü‡∏•‡πå
let preventMenuToggle = true;
let heartbeatInterval = null; // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö interval ‡∏Ç‡∏≠‡∏á heartbeat

// --- VVV ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö Role & Permissions VVV ---
let currentLoggedInUserId = null;
let currentLoggedInUserRole = 'member'; // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
let allMembersData = []; // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
// --- ^^^ ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ ^^^ ---
function connectWebSocket(roomId) {
    if (socket && socket.readyState === WebSocket.OPEN) {
        console.warn("‚ö†Ô∏è WebSocket ‡∏¢‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà");
        return;
    }

    // --- VVV ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏∏‡∏î Heartbeat ‡πÄ‡∏Å‡πà‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) VVV ---
    if (heartbeatInterval) {
        clearInterval(heartbeatInterval);
        heartbeatInterval = null;
        console.log("üõë Heartbeat ‡πÄ‡∏Å‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡∏´‡∏¢‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß");
    }
    // --- ^^^ ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° ^^^ ---

    let wsProtocol = window.location.protocol === "https:" ? "wss://" : "ws://";
    let wsURL = `${wsProtocol}${window.location.host}/ws/room/${roomId}/`;
    socket = new WebSocket(wsURL);

    socket.onopen = function () {
        console.log("‚úÖ WebSocket ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
        // --- VVV ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á Heartbeat ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏¢‡∏±‡∏á‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå VVV ---
        heartbeatInterval = setInterval(() => {
            if (socket && socket.readyState === WebSocket.OPEN) {
                // console.log("üíì Sending heartbeat..."); // ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠ debug
                socket.send(JSON.stringify({ action: 'heartbeat' }));
            }
        }, 30000); // ‡∏™‡πà‡∏á‡∏ó‡∏∏‡∏Å 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        console.log("üíì Heartbeat ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (‡∏ó‡∏∏‡∏Å 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)");
        // --- ^^^ ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° ^^^ ---
    };

    socket.onmessage = function (event) {
        let data = JSON.parse(event.data);
        console.log("üì© ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å WebSocket:", data);

        // --- VVV ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ event ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å WebSocket VVV ---
        switch (data.type) {
            case "refresh_members":
            case "update_members":
                console.log("üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏à‡∏≤‡∏Å API...");
                loadRoomMembers(); // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
                break;
            case "profile_updated":
                console.log(`üë§ ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö user ID: ${data.user_id}`);
                // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
                updateUserInList(data.user_id, data.display_name, data.profile_image_url);
                break;
            case "user_status":
                console.log(`üì∂ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö user ID: ${data.user_id}, ‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå: ${data.is_online}`);
                // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå/‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå
                updateUserStatus(data.user_id, data.is_online);
                break;
            case "role_update":
                console.log(`üëë Role updated for user ID: ${data.user_id} to ${data.new_role}`);
                // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Role ‡πÉ‡∏ô UI
                updateUserRoleInList(data.user_id, data.new_role);
                break;
        }
        // --- ^^^ ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ event ^^^ ---
    };

    socket.onclose = function (event) {
        console.warn("‚ùå WebSocket ‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ (Code: " + event.code + ")");
        // --- VVV ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏∏‡∏î Heartbeat ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ VVV ---
        if (heartbeatInterval) {
            clearInterval(heartbeatInterval);
            heartbeatInterval = null;
            console.log("üõë Heartbeat ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å WebSocket ‡∏õ‡∏¥‡∏î");
        }
        // --- ^^^ ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° ^^^ ---
        setTimeout(() => connectWebSocket(roomId), 3000);
    };

    socket.onerror = function (error) {
        console.error("‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡∏±‡∏ö WebSocket:", error);
    };
}

function connectLobbySocket() {
    console.log("üîå Attempting to connect to the Lobby WebSocket...");
    
    const lobbyProtocol = window.location.protocol === "https:" ? "wss://" : "ws://";
    const lobbyUrl = `${lobbyProtocol}${window.location.host}/ws/lobby/`;
    const lobbySocket = new WebSocket(lobbyUrl);

    lobbySocket.onopen = function() {
        console.log("‚úÖ Lobby WebSocket connection established.");
    };

    lobbySocket.onmessage = function(event) {
        const data = JSON.parse(event.data);
        console.log("üõéÔ∏è Received a notification from Lobby:", data);

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏ô‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
        if (data.type === 'room_updated' && data.room) {
            const room = data.room;
            console.log(`üîÑ Updating room in sidebar: ID=${room.id}, Name=${room.name}`);
            
            // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏ô Sidebar ‡∏î‡πâ‡∏ß‡∏¢ ID
            const roomListItem = document.querySelector(`#roomList li[onclick*="loadRoom('${room.id}'"]`);

            if (roomListItem) {
                // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡∏∑‡πà‡∏≠
                const roomNameSpan = roomListItem.querySelector('span');
                if (roomNameSpan) {
                    roomNameSpan.textContent = room.name;
                }
                
                // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
                const roomImageElem = roomListItem.querySelector('img');
                if (roomImageElem) {
                    roomImageElem.src = room.image_url;
                }
                
                // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï onclick attribute ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å
                // ‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà‡∏á‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á element ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                const oldOnclick = roomListItem.getAttribute('onclick');
                const oldInviteCode = oldOnclick.split(',')[2].replace(/['")]/g, '').trim();
                roomListItem.setAttribute('onclick', `loadRoom('${room.id}', '${room.name}', '${oldInviteCode}')`);

            } else {
                console.warn(`Could not find room with ID ${room.id} in the sidebar to update.`);
            }
        }
    };

    lobbySocket.onclose = function(event) {
        console.warn("‚ùå Lobby WebSocket connection closed. Reconnecting in 5 seconds...");
        setTimeout(connectLobbySocket, 5000); // ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà
    };

    lobbySocket.onerror = function(error) {
        console.error("‚ö†Ô∏è Lobby WebSocket error:", error);
    };
}

function loadRoomMembers() {
    let roomId = localStorage.getItem("currentRoomId");
    if (!roomId) {
        console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö roomId! ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÑ‡∏î‡πâ");
        return;
    }

    fetch(`/get-room-members/${roomId}/?timestamp=${Date.now()}`) // timestamp ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô cache
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP Error! Status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            console.log("üì° ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏à‡∏≤‡∏Å API:", data);

            let userList = document.getElementById("userList");
            if (!userList) {
                console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö <ul id='userList'> ‡πÉ‡∏ô HTML");
                return;
            }

            // --- VVV ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Role & Permissions VVV ---
            allMembersData = data.members; // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ global

            // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ Role ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà
            const currentUserMember = allMembersData.find(m => m.id == currentLoggedInUserId);
            if (currentUserMember) {
                currentLoggedInUserRole = currentUserMember.role;
                console.log(`üîë Your role in this room is: ${currentLoggedInUserRole}`);
            }
            // --- ^^^ ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Role ^^^ ---

            userList.innerHTML = ""; // ‡∏•‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πà‡∏≤
            if (Array.isArray(data.members) && data.members.length > 0) {
                data.members.forEach(member => {
                    let li = document.createElement("li");
                    li.dataset.userId = member.id; // ‡πÄ‡∏û‡∏¥‡πà‡∏° data-user-id ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
                    
                    // ‡πÄ‡∏û‡∏¥‡πà‡∏° class ‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå/‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå
                    if (member.is_online) {
                        li.classList.add('online-user');
                    } else {
                        li.classList.add('offline-user');
                    }

                    // ‡πÄ‡∏û‡∏¥‡πà‡∏° data-attribute ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Role ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÉ‡∏ô context menu
                    li.dataset.role = member.role;

                    // VVV ‡πÉ‡∏ä‡πâ name_to_display ‡∏à‡∏≤‡∏Å API VVV
                    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ name_to_display ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ username ‡∏´‡∏£‡∏∑‡∏≠ "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ä‡∏∑‡πà‡∏≠" ‡πÄ‡∏õ‡πá‡∏ô fallback
                    const displayName = member.name_to_display || member.username || '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ä‡∏∑‡πà‡∏≠';
                    // ^^^ ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á ^^^
                    li.innerHTML = `
                        <div class="profile-image-wrapper">
                            <img src="${member.profile_image || '/media/default/profile.jpg'}" 
                                onerror="this.src='/media/default/profile.jpg'" 
                                class="profile-img">
                            <span class="crown-icon role-${member.role}"></span>
                        </div>
                        <span class="user-display-name">${escapeHTML(displayName)}</span>
                    `; // ‡πÄ‡∏û‡∏¥‡πà‡∏° class user-display-name ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô

                    // ‡πÄ‡∏û‡∏¥‡πà‡∏° Event Listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π (‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ã‡πâ‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏Ç‡∏ß‡∏≤)
                    li.addEventListener('contextmenu', handleUserContextMenu);
                    li.addEventListener('click', handleUserContextMenu);
                    userList.appendChild(li);
                });
            } else {
                console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
                userList.innerHTML = "<li>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ</li>";
            }
        })
        .catch(error => {
            console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å:", error);
            let userList = document.getElementById("userList");
            if (userList) { // ‡πÅ‡∏™‡∏î‡∏á error ‡πÉ‡∏ô list ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ
                userList.innerHTML = "<li>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</li>";
            }
        });
}

// --- VVV ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô VVV ---
function updateUserInList(userId, newDisplayName, newProfileImageUrl) {
    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ li ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô #userList ‡∏à‡∏≤‡∏Å data-user-id ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ß‡πâ
    const userListItem = document.querySelector(`#userList li[data-user-id="${userId}"]`);
    
    if (userListItem) {
        const userNameSpan = userListItem.querySelector('.user-display-name'); // ‡πÉ‡∏ä‡πâ class ‡πÉ‡∏´‡∏°‡πà
        const userImageImg = userListItem.querySelector('img.profile-img');
        const crownIcon = userListItem.querySelector('.crown-icon');

        if (userNameSpan) {
            userNameSpan.textContent = escapeHTML(newDisplayName);
        }
        if (userImageImg && newProfileImageUrl) {
            // ‡πÄ‡∏û‡∏¥‡πà‡∏° timestamp ‡∏ï‡πà‡∏≠‡∏ó‡πâ‡∏≤‡∏¢ URL ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ browser ‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡πÄ‡∏Å‡πà‡∏≤‡∏à‡∏≤‡∏Å cache
            userImageImg.src = newProfileImageUrl + "?t=" + new Date().getTime();
        }
        console.log(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö user ID: ${userId} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);
    } else {
        console.warn(`‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö user ID: ${userId} ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI`);
    }

    // ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏•‡πà‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢
    // ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á ID ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏ô JavaScript
    // ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï element .current-user-name-text ‡πÅ‡∏•‡∏∞ .current-user-avatar-img ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
}

function escapeHTML(str) {
    if (typeof str !== 'string') return '';
    // ‡πÉ‡∏ä‡πâ object map ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢
    return str.replace(/[&<>"']/g, match => ({
        '&': '&amp;',
        '<': '&lt;',
        '>': '&gt;',
        '"': '&quot;',
        "'": '&#39;'
    }[match]));
}
// --- ^^^ ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà ^^^ ---

// --- VVV ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå/‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå VVV ---
function updateUserStatus(userId, isOnline) {
    const userListItem = document.querySelector(`#userList li[data-user-id="${userId}"]`);

    if (userListItem) {
        if (isOnline) {
            userListItem.classList.remove('offline-user');
            userListItem.classList.add('online-user');
            console.log(`‚úÖ User ID: ${userId} is now online.`);
            // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏¢‡πâ‡∏≤‡∏¢‡πÄ‡∏Ç‡∏≤‡πÑ‡∏õ‡πÑ‡∏ß‡πâ‡∏ö‡∏ô‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏•‡∏¥‡∏™‡∏ï‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
            userListItem.parentElement.prepend(userListItem);
        } else {
            userListItem.classList.remove('online-user');
            userListItem.classList.add('offline-user');
            console.log(`‚úÖ User ID: ${userId} is now offline.`);
            // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏¢‡πâ‡∏≤‡∏¢‡πÄ‡∏Ç‡∏≤‡πÑ‡∏õ‡πÑ‡∏ß‡πâ‡∏ó‡πâ‡∏≤‡∏¢‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏•‡∏¥‡∏™‡∏ï‡πå
            userListItem.parentElement.appendChild(userListItem);
        }
    } else {
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏•‡∏¥‡∏™‡∏ï‡πå (‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏°‡∏≤) ‡πÉ‡∏´‡πâ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        // ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
        console.warn(`‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö user ID: ${userId} ‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠, ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...`);
        loadRoomMembers();
    }
}
// --- ^^^ ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà ^^^ ---

// --- VVV ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö Role & Context Menu VVV ---

/**
 * ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI (‡∏°‡∏á‡∏Å‡∏∏‡∏é) ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Role ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏•‡∏¥‡∏™‡∏ï‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
 * @param {number} userId - ID ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Role
 * @param {string} newRole - Role ‡πÉ‡∏´‡∏°‡πà (‡πÄ‡∏ä‡πà‡∏ô 'admin', 'family', 'member')
 */
function updateUserRoleInList(userId, newRole) {
    const userListItem = document.querySelector(`#userList li[data-user-id="${userId}"]`); // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å li element
    if (userListItem) {
        // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏°‡∏á‡∏Å‡∏∏‡∏é‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï class role ‡∏Ç‡∏≠‡∏á‡∏°‡∏±‡∏ô
        const crownIcon = userListItem.querySelector('.crown-icon');
        if (crownIcon) {
            crownIcon.className = 'crown-icon'; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï class
            crownIcon.classList.add(`role-${newRole}`); // ‡πÄ‡∏û‡∏¥‡πà‡∏° class role ‡πÉ‡∏´‡∏°‡πà
        }
        userListItem.dataset.role = newRole;
        console.log(`‚úÖ UI updated for user ${userId} to role ${newRole}`);
    }

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô global state ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏î‡πâ‡∏ß‡∏¢
    const memberToUpdate = allMembersData.find(m => m.id == userId);
    if (memberToUpdate) {
        memberToUpdate.role = newRole;
    }

    // ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Role ‡∏Ñ‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡∏≤‡πÄ‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï role ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏î‡πâ‡∏ß‡∏¢
    if (userId == currentLoggedInUserId) {
        currentLoggedInUserRole = newRole;
        console.log(`üëë Your role has been updated to: ${newRole}`);
    }
}

/**
 * ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Event ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Ç‡∏ß‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
 * @param {MouseEvent} event - The contextmenu event object.
 */
function handleUserContextMenu(event) {
    // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Ç‡∏ß‡∏≤ (contextmenu) ‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏°‡∏ô‡∏π‡∏Ç‡∏≠‡∏á‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤
    if (event.type === 'contextmenu') {
        event.preventDefault();
    }
    // ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏£‡πà‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á event ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏•‡∏≠‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏´‡∏≤ element ‡πÅ‡∏°‡πà (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡∏ö‡∏±‡πä‡∏Å)
    event.stopPropagation();

    // ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏Å‡πà‡∏≠‡∏ô
    hideAllPopups();

    const targetLi = event.currentTarget;
    const targetUserId = targetLi.dataset.userId; // ID ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏•‡∏¥‡∏Å

    // ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á (‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏•‡πà‡∏≤‡∏á)
    if (targetUserId == currentLoggedInUserId) {
        toggleCurrentUserMenu(); // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô popup_03.4.js
        return; // ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
    }

    // ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ô‡∏ô‡∏±‡πâ‡∏ô
    const targetUserRole = targetLi.dataset.role;
    const targetUserName = targetLi.querySelector('.user-display-name').textContent;
    buildAndShowUserContextMenu(event, targetUserId, targetUserRole, targetUserName);
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Ç‡∏ß‡∏≤‡∏ï‡∏≤‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
 */
function buildAndShowUserContextMenu(event, targetUserId, targetUserRole, targetUserName) {
    const contextMenu = document.getElementById('userContextMenu');
    const menuUl = contextMenu.querySelector('ul');
    menuUl.innerHTML = ''; // ‡∏•‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏Å‡πà‡∏≤

    // --- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏≤‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå ---
    const isSelf = targetUserId == currentLoggedInUserId;
    const isTargetOwner = targetUserRole === 'owner';
    const canManage = ['owner', 'admin'].includes(currentLoggedInUserRole); // ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà

    // Header
    menuUl.innerHTML += `<li class="menu-header">${escapeHTML(targetUserName)}</li>`;

    // ‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå (‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏ó‡∏≥‡πÑ‡∏î‡πâ)
    menuUl.innerHTML += `<li onclick="alert('‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á ${escapeHTML(targetUserName)} (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà implement)'); hideAllPopups();">‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</li>`;

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ (‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£, ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á, ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á)
    if (canManage && !isSelf && !isTargetOwner) { 
        menuUl.innerHTML += `<li class="separator"></li>`;

        // ‡∏°‡∏≠‡∏ö‡∏°‡∏á
        menuUl.innerHTML += `<li onclick="displayAssignRoleModal('${targetUserId}', '${escapeHTML(targetUserName)}', '${targetUserRole}')">‡∏°‡∏≠‡∏ö‡∏°‡∏á üëë</li>`;

        // ‡πÄ‡∏ï‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        const canKick = (currentLoggedInUserRole === 'owner') || (currentLoggedInUserRole === 'admin' && targetUserRole !== 'admin');
        if (canKick) {
            menuUl.innerHTML += `<li class="danger-zone" onclick="alert('‡πÄ‡∏ï‡∏∞ ${escapeHTML(targetUserName)} (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà implement)'); hideAllPopups();">‡πÄ‡∏ï‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</li>`;
        }
    }

    // --- ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏°‡∏ô‡∏π ---
    contextMenu.style.display = 'block';
    const { clientX: mouseX, clientY: mouseY } = event;
    const { innerWidth, innerHeight } = window;
    const menuRect = contextMenu.getBoundingClientRect();

    contextMenu.style.top = `${mouseY + menuRect.height > innerHeight ? innerHeight - menuRect.height - 5 : mouseY}px`;
    contextMenu.style.left = `${mouseX + menuRect.width > innerWidth ? innerWidth - menuRect.width - 5 : mouseX}px`;

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏∑‡πà‡∏ô
    setTimeout(() => { // ‡πÉ‡∏ä‡πâ setTimeout ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ event click ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏î‡∏±‡∏Å‡∏à‡∏±‡∏ö
        document.addEventListener('click', hideAllPopups, { once: true });
        document.addEventListener('contextmenu', hideAllPopups, { once: true }); // ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Ç‡∏ß‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏∑‡πà‡∏ô‡∏î‡πâ‡∏ß‡∏¢
    }, 0);
}

/**
 * ‡πÅ‡∏™‡∏î‡∏á Popup (Generic Modal) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Role
 */
function displayAssignRoleModal(targetUserId, targetUserName, currentRole) {
    hideAllPopups(); // ‡∏õ‡∏¥‡∏î context menu ‡∏Å‡πà‡∏≠‡∏ô
    let rolesHtml = '';
    const availableRoles = [
        { name: '‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô', value: 'admin' },
        { name: '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß', value: 'family' },
        { name: '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å', value: 'member' }
    ];

    availableRoles.forEach(role => {
        // Admin ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏°‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå Admin ‡πÉ‡∏´‡πâ‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÑ‡∏î‡πâ
        if (currentLoggedInUserRole === 'admin' && role.value === 'admin') {
            return; // ‡∏Ç‡πâ‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ô‡∏µ‡πâ‡πÑ‡∏õ
        }
        const isChecked = currentRole === role.value ? 'checked' : '';
        // ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS ‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°
        rolesHtml += `
            <div style="margin-bottom: 10px;">
                <input type="radio" id="role-option-${role.value}" name="new_role" value="${role.value}" ${isChecked} style="margin-right: 8px;">
                <label for="role-option-${role.value}">${escapeHTML(role.name)}</label>
            </div>
        `;
    });

    const body = `
        <p>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö <strong>${targetUserName}</strong>:</p>
        <div style="margin-top: 15px;">${rolesHtml}</div>
    `;

    openGenericModal({
        title: '‡∏°‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (‡∏°‡∏á)',
        bodyHTML: body,
        footerHTML: `
            <button class="modal-button-default" onclick="closeGenericModal()">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
            <button class="modal-button-primary" onclick="confirmAssignRole(${targetUserId})">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô</button>
        `
    });
}

/**
 * ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Role ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á Request ‡πÑ‡∏õ‡∏¢‡∏±‡∏á API
 */
function confirmAssignRole(targetUserId) {
    const selectedRole = document.querySelector('input[name="new_role"]:checked');
    if (!selectedRole) {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏ö');
        return;
    }
    const newRoleName = selectedRole.value;
    const roomId = localStorage.getItem("currentRoomId");
    if (!roomId) { alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô"); return; }

    const formData = new FormData();
    formData.append('user_id', targetUserId);
    formData.append('role_name', newRoleName);

    fetch(`/api/room/${roomId}/assign-role/`, {
        method: 'POST',
        body: formData,
        headers: { 'X-CSRFToken': getCSRFToken() }
    })
    .then(response => response.json())
    .then(data => {
        if (!data.success) { alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${data.error}`); }
        // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡∏Å‡∏±‡∏ö UI ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ WebSocket ‡∏à‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏≠‡∏á
        closeGenericModal();
    })
    .catch(error => {
        console.error("Error assigning role:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞");
        closeGenericModal();
    });
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ã‡πà‡∏≠‡∏ô Popup ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 */
function hideAllPopups() {
    document.querySelectorAll('.popup-menu').forEach(menu => {
        menu.style.display = 'none';
    });
}

// --- ^^^ ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö Role & Context Menu ^^^ ---

function disconnectRoom() {
    preventMenuToggle = true; 
    // ‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ
    localStorage.removeItem("currentRoomId");
    localStorage.removeItem("currentRoomName");
    localStorage.removeItem("currentInviteCode");

    // ‚úÖ ‡∏ã‡πà‡∏≠‡∏ô UI ‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏™‡∏î‡∏á Sidebar (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á)
    document.querySelector(".user-container").style.display = "none";
    document.querySelector(".sidebar").style.display = "block";

    // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï UI ‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á
    document.getElementById("roomTitle").textContent = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á";
    document.getElementById("leaveBtn").style.display = "none";
    document.getElementById("settingsBtn").style.display = "none";
    document.getElementById("userList").innerHTML = "";

    // ‚úÖ ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    document.getElementById("settingsMenu").style.display = "none";
    // ‚úÖ ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡πâ‡∏≤‡∏á
    setTimeout(() => {
        window.location.reload();
    }, 50); // ‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏±‡πâ‡∏ô ‡πÜ ‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î
}

// --- VVV ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á ID ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à VVV ---
document.addEventListener('DOMContentLoaded', () => {
    currentLoggedInUserId = document.body.dataset.currentUserId;
});
// --- ^^^ ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° ^^^ ---
